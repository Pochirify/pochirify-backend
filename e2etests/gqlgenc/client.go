// Code generated by github.com/Yamashou/gqlgenc, DO NOT EDIT.

package gqlgenc

import (
	"context"
	"net/http"

	"github.com/Yamashou/gqlgenc/clientv2"
)

type GraphQLClient interface {
	GetAllActiveVariantGroupIDs(ctx context.Context, interceptors ...clientv2.RequestInterceptor) (*GetAllActiveVariantGroupIDs, error)
	CreateOrder(ctx context.Context, input CreateOrderInput, interceptors ...clientv2.RequestInterceptor) (*CreateOrder, error)
}

type Client struct {
	Client *clientv2.Client
}

func NewClient(cli *http.Client, baseURL string, interceptors ...clientv2.RequestInterceptor) GraphQLClient {
	return &Client{Client: clientv2.NewClient(cli, baseURL, interceptors...)}
}

type Query struct {
	VariantGroupDetail       VariantGroupDetail       "json:\"variantGroupDetail\" graphql:\"variantGroupDetail\""
	AllActiveVariantGroupIDs AllActiveVariantGroupIDs "json:\"allActiveVariantGroupIDs\" graphql:\"allActiveVariantGroupIDs\""
}
type Mutation struct {
	CreateOrder CreateOrderPayload "json:\"createOrder\" graphql:\"createOrder\""
}
type getAllActiveVariantGroupIDs_AllActiveVariantGroupIDs struct {
	Ids []string "json:\"ids\" graphql:\"ids\""
}
type createOrder_CreateOrder_OrderResult_PaypayOrderResult struct {
	URL string "json:\"url\" graphql:\"url\""
}
type createOrder_CreateOrder_OrderResult_CreditCardResult struct {
	CardOrderID string "json:\"cardOrderID\" graphql:\"cardOrderID\""
	AccessID    string "json:\"accessID\" graphql:\"accessID\""
}
type createOrder_CreateOrder_OrderResult struct {
	PaypayOrderResult createOrder_CreateOrder_OrderResult_PaypayOrderResult "graphql:\"... on paypayOrderResult\""
	CreditCardResult  createOrder_CreateOrder_OrderResult_CreditCardResult  "graphql:\"... on creditCardResult\""
}
type createOrder_CreateOrder struct {
	OrderID     string                              "json:\"orderID\" graphql:\"orderID\""
	TotalPrice  int                                 "json:\"totalPrice\" graphql:\"totalPrice\""
	OrderResult createOrder_CreateOrder_OrderResult "json:\"orderResult\" graphql:\"orderResult\""
}
type GetAllActiveVariantGroupIDs struct {
	AllActiveVariantGroupIDs getAllActiveVariantGroupIDs_AllActiveVariantGroupIDs "json:\"allActiveVariantGroupIDs\" graphql:\"allActiveVariantGroupIDs\""
}
type CreateOrder struct {
	CreateOrder createOrder_CreateOrder "json:\"createOrder\" graphql:\"createOrder\""
}

const GetAllActiveVariantGroupIDsDocument = `query getAllActiveVariantGroupIDs {
	allActiveVariantGroupIDs {
		ids
	}
}
`

func (c *Client) GetAllActiveVariantGroupIDs(ctx context.Context, interceptors ...clientv2.RequestInterceptor) (*GetAllActiveVariantGroupIDs, error) {
	vars := map[string]interface{}{}

	var res GetAllActiveVariantGroupIDs
	if err := c.Client.Post(ctx, "getAllActiveVariantGroupIDs", GetAllActiveVariantGroupIDsDocument, &res, vars, interceptors...); err != nil {
		return nil, err
	}

	return &res, nil
}

const CreateOrderDocument = `mutation createOrder ($input: createOrderInput!) {
	createOrder(input: $input) {
		orderID
		totalPrice
		orderResult {
			... on paypayOrderResult {
				url
			}
			... on creditCardResult {
				cardOrderID
				accessID
			}
		}
	}
}
`

func (c *Client) CreateOrder(ctx context.Context, input CreateOrderInput, interceptors ...clientv2.RequestInterceptor) (*CreateOrder, error) {
	vars := map[string]interface{}{
		"input": input,
	}

	var res CreateOrder
	if err := c.Client.Post(ctx, "createOrder", CreateOrderDocument, &res, vars, interceptors...); err != nil {
		return nil, err
	}

	return &res, nil
}
